{
  "rankingByAvgRank": [
    {
      "rank": 1,
      "optimizer": "emonavi",
      "value": "17.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emonavi"
    },
    {
      "rank": 2,
      "optimizer": "adalite",
      "value": "18.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adalite"
    },
    {
      "rank": 3,
      "optimizer": "emofact",
      "value": "20.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emofact"
    },
    {
      "rank": 4,
      "optimizer": "emozeal",
      "value": "20.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emozeal"
    },
    {
      "rank": 5,
      "optimizer": "fadam",
      "value": "22.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fadam"
    },
    {
      "rank": 6,
      "optimizer": "adashift",
      "value": "22.7895",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adashift"
    },
    {
      "rank": 7,
      "optimizer": "soap",
      "value": "24.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/soap"
    },
    {
      "rank": 8,
      "optimizer": "aida",
      "value": "24.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/aida"
    },
    {
      "rank": 9,
      "optimizer": "kron",
      "value": "25.5263",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/kron"
    },
    {
      "rank": 10,
      "optimizer": "sophiah",
      "value": "25.6316",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sophiah"
    },
    {
      "rank": 11,
      "optimizer": "signsgd",
      "value": "26.4211",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/signsgd"
    },
    {
      "rank": 12,
      "optimizer": "adamp",
      "value": "27.5263",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamp"
    },
    {
      "rank": 13,
      "optimizer": "grokfastadamw",
      "value": "29.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/grokfastadamw"
    },
    {
      "rank": 14,
      "optimizer": "focus",
      "value": "29.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/focus"
    },
    {
      "rank": 15,
      "optimizer": "adagc",
      "value": "29.6316",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adagc"
    },
    {
      "rank": 16,
      "optimizer": "adabelief",
      "value": "29.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adabelief"
    },
    {
      "rank": 17,
      "optimizer": "tiger",
      "value": "30.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/tiger"
    },
    {
      "rank": 18,
      "optimizer": "adamc",
      "value": "31.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamc"
    },
    {
      "rank": 19,
      "optimizer": "swats",
      "value": "31.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/swats"
    },
    {
      "rank": 20,
      "optimizer": "adanorm",
      "value": "32.0526",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adanorm"
    },
    {
      "rank": 21,
      "optimizer": "fira",
      "value": "32.1053",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fira"
    },
    {
      "rank": 22,
      "optimizer": "apollo",
      "value": "32.1053",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/apollo"
    },
    {
      "rank": 23,
      "optimizer": "galore",
      "value": "32.1053",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/galore"
    },
    {
      "rank": 24,
      "optimizer": "yogi",
      "value": "32.2632",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/yogi"
    },
    {
      "rank": 25,
      "optimizer": "stablespam",
      "value": "32.4211",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/stablespam"
    },
    {
      "rank": 26,
      "optimizer": "adopt",
      "value": "32.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adopt"
    },
    {
      "rank": 27,
      "optimizer": "spam",
      "value": "32.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/spam"
    },
    {
      "rank": 28,
      "optimizer": "laprop",
      "value": "32.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/laprop"
    },
    {
      "rank": 29,
      "optimizer": "adam",
      "value": "33.4211",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adam"
    },
    {
      "rank": 30,
      "optimizer": "ademamix",
      "value": "33.6316",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ademamix"
    },
    {
      "rank": 31,
      "optimizer": "came",
      "value": "34.1053",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/came"
    },
    {
      "rank": 32,
      "optimizer": "simplifiedademamix",
      "value": "34.1579",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/simplifiedademamix"
    },
    {
      "rank": 33,
      "optimizer": "adammini",
      "value": "34.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adammini"
    },
    {
      "rank": 34,
      "optimizer": "adatam",
      "value": "35.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adatam"
    },
    {
      "rank": 35,
      "optimizer": "tam",
      "value": "35.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/tam"
    },
    {
      "rank": 36,
      "optimizer": "novograd",
      "value": "36.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/novograd"
    },
    {
      "rank": 37,
      "optimizer": "scion",
      "value": "37.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scion"
    },
    {
      "rank": 38,
      "optimizer": "emolynx",
      "value": "38.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emolynx"
    },
    {
      "rank": 39,
      "optimizer": "lion",
      "value": "38.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lion"
    },
    {
      "rank": 40,
      "optimizer": "adabound",
      "value": "44",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adabound"
    },
    {
      "rank": 41,
      "optimizer": "adan",
      "value": "44.3158",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adan"
    },
    {
      "rank": 42,
      "optimizer": "adamax",
      "value": "45.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamax"
    },
    {
      "rank": 43,
      "optimizer": "sgd",
      "value": "45.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgd"
    },
    {
      "rank": 44,
      "optimizer": "sgdp",
      "value": "45.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgdp"
    },
    {
      "rank": 45,
      "optimizer": "vsgd",
      "value": "46.0526",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/vsgd"
    },
    {
      "rank": 46,
      "optimizer": "ranger21",
      "value": "46.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger21"
    },
    {
      "rank": 47,
      "optimizer": "nadam",
      "value": "46.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/nadam"
    },
    {
      "rank": 48,
      "optimizer": "pid",
      "value": "47.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/pid"
    },
    {
      "rank": 49,
      "optimizer": "prodigy",
      "value": "48.3158",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/prodigy"
    },
    {
      "rank": 50,
      "optimizer": "lars",
      "value": "49",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lars"
    },
    {
      "rank": 51,
      "optimizer": "adahessian",
      "value": "50.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adahessian"
    },
    {
      "rank": 52,
      "optimizer": "schedulefreeadamw",
      "value": "51.3684",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreeadamw"
    },
    {
      "rank": 53,
      "optimizer": "scionlight",
      "value": "51.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scionlight"
    },
    {
      "rank": 54,
      "optimizer": "avagrad",
      "value": "52",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/avagrad"
    },
    {
      "rank": 55,
      "optimizer": "padam",
      "value": "52.1053",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/padam"
    },
    {
      "rank": 56,
      "optimizer": "madgrad",
      "value": "52.4737",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/madgrad"
    },
    {
      "rank": 57,
      "optimizer": "gravity",
      "value": "53.0526",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/gravity"
    },
    {
      "rank": 58,
      "optimizer": "adadelta",
      "value": "53.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adadelta"
    },
    {
      "rank": 59,
      "optimizer": "apollodqn",
      "value": "53.6316",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/apollodqn"
    },
    {
      "rank": 60,
      "optimizer": "ranger25",
      "value": "53.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger25"
    },
    {
      "rank": 61,
      "optimizer": "fromage",
      "value": "54.5263",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fromage"
    },
    {
      "rank": 62,
      "optimizer": "radam",
      "value": "56.3158",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/radam"
    },
    {
      "rank": 63,
      "optimizer": "emoneco",
      "value": "56.4211",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emoneco"
    },
    {
      "rank": 64,
      "optimizer": "scalableshampoo",
      "value": "57",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scalableshampoo"
    },
    {
      "rank": 65,
      "optimizer": "aggmo",
      "value": "57.1579",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/aggmo"
    },
    {
      "rank": 66,
      "optimizer": "adasmooth",
      "value": "57.7895",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adasmooth"
    },
    {
      "rank": 67,
      "optimizer": "adai",
      "value": "59.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adai"
    },
    {
      "rank": 68,
      "optimizer": "asgd",
      "value": "59.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/asgd"
    },
    {
      "rank": 69,
      "optimizer": "lamb",
      "value": "60.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lamb"
    },
    {
      "rank": 70,
      "optimizer": "sgdsai",
      "value": "61.7895",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgdsai"
    },
    {
      "rank": 71,
      "optimizer": "dadaptadan",
      "value": "62.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptadan"
    },
    {
      "rank": 72,
      "optimizer": "ftrl",
      "value": "62.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ftrl"
    },
    {
      "rank": 73,
      "optimizer": "dadaptsgd",
      "value": "62.8947",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptsgd"
    },
    {
      "rank": 74,
      "optimizer": "sm3",
      "value": "63.8947",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sm3"
    },
    {
      "rank": 75,
      "optimizer": "adapnm",
      "value": "64.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adapnm"
    },
    {
      "rank": 76,
      "optimizer": "schedulefreesgd",
      "value": "65.1579",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreesgd"
    },
    {
      "rank": 77,
      "optimizer": "nero",
      "value": "65.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/nero"
    },
    {
      "rank": 78,
      "optimizer": "exadam",
      "value": "66.5789",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/exadam"
    },
    {
      "rank": 79,
      "optimizer": "diffgrad",
      "value": "68.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/diffgrad"
    },
    {
      "rank": 80,
      "optimizer": "lbfgs",
      "value": "68.3158",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lbfgs"
    },
    {
      "rank": 81,
      "optimizer": "accsgd",
      "value": "68.6316",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/accsgd"
    },
    {
      "rank": 82,
      "optimizer": "pnm",
      "value": "68.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/pnm"
    },
    {
      "rank": 83,
      "optimizer": "racs",
      "value": "69.5263",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/racs"
    },
    {
      "rank": 84,
      "optimizer": "dadaptlion",
      "value": "70.7368",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptlion"
    },
    {
      "rank": 85,
      "optimizer": "qhm",
      "value": "71.8421",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/qhm"
    },
    {
      "rank": 86,
      "optimizer": "rmsprop",
      "value": "72.6842",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/rmsprop"
    },
    {
      "rank": 87,
      "optimizer": "ranger",
      "value": "73.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger"
    },
    {
      "rank": 88,
      "optimizer": "dadaptadagrad",
      "value": "74.8947",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptadagrad"
    },
    {
      "rank": 89,
      "optimizer": "qhadam",
      "value": "76.1579",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/qhadam"
    },
    {
      "rank": 90,
      "optimizer": "shampoo",
      "value": "76.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/shampoo"
    },
    {
      "rank": 91,
      "optimizer": "kate",
      "value": "76.2105",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/kate"
    },
    {
      "rank": 92,
      "optimizer": "grams",
      "value": "81.9474",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/grams"
    },
    {
      "rank": 93,
      "optimizer": "adamg",
      "value": "82.3158",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamg"
    },
    {
      "rank": 94,
      "optimizer": "schedulefreeradam",
      "value": "83.8947",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreeradam"
    },
    {
      "rank": 95,
      "optimizer": "adams",
      "value": "85.3684",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adams"
    },
    {
      "rank": 96,
      "optimizer": "adamod",
      "value": "87.1579",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamod"
    },
    {
      "rank": 97,
      "optimizer": "srmm",
      "value": "91.0526",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/srmm"
    },
    {
      "rank": 98,
      "optimizer": "adafactor",
      "value": "96.0526",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adafactor"
    },
    {
      "rank": 99,
      "optimizer": "mars",
      "value": "97.7368",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/mars"
    }
  ],
  "rankingByErrorRate": [
    {
      "rank": 1,
      "optimizer": "adalite",
      "value": "1.5106",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adalite"
    },
    {
      "rank": 2,
      "optimizer": "adashift",
      "value": "1.6161",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adashift"
    },
    {
      "rank": 3,
      "optimizer": "emonavi",
      "value": "1.638",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emonavi"
    },
    {
      "rank": 4,
      "optimizer": "sophiah",
      "value": "1.705",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sophiah"
    },
    {
      "rank": 5,
      "optimizer": "fadam",
      "value": "1.7388",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fadam"
    },
    {
      "rank": 6,
      "optimizer": "emofact",
      "value": "1.7439",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emofact"
    },
    {
      "rank": 7,
      "optimizer": "emozeal",
      "value": "1.7439",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emozeal"
    },
    {
      "rank": 8,
      "optimizer": "aida",
      "value": "1.8121",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/aida"
    },
    {
      "rank": 9,
      "optimizer": "signsgd",
      "value": "1.8405",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/signsgd"
    },
    {
      "rank": 10,
      "optimizer": "kron",
      "value": "1.8566",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/kron"
    },
    {
      "rank": 11,
      "optimizer": "soap",
      "value": "1.8633",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/soap"
    },
    {
      "rank": 12,
      "optimizer": "adabelief",
      "value": "1.8801",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adabelief"
    },
    {
      "rank": 13,
      "optimizer": "focus",
      "value": "1.9194",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/focus"
    },
    {
      "rank": 14,
      "optimizer": "adamp",
      "value": "1.9284",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamp"
    },
    {
      "rank": 15,
      "optimizer": "stablespam",
      "value": "1.9527",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/stablespam"
    },
    {
      "rank": 16,
      "optimizer": "grokfastadamw",
      "value": "1.9688",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/grokfastadamw"
    },
    {
      "rank": 17,
      "optimizer": "yogi",
      "value": "1.9907",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/yogi"
    },
    {
      "rank": 18,
      "optimizer": "tiger",
      "value": "1.994",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/tiger"
    },
    {
      "rank": 19,
      "optimizer": "adanorm",
      "value": "2.0142",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adanorm"
    },
    {
      "rank": 20,
      "optimizer": "adagc",
      "value": "2.0461",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adagc"
    },
    {
      "rank": 21,
      "optimizer": "adammini",
      "value": "2.0507",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adammini"
    },
    {
      "rank": 22,
      "optimizer": "spam",
      "value": "2.0666",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/spam"
    },
    {
      "rank": 23,
      "optimizer": "adopt",
      "value": "2.0779",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adopt"
    },
    {
      "rank": 24,
      "optimizer": "adamc",
      "value": "2.0859",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamc"
    },
    {
      "rank": 25,
      "optimizer": "swats",
      "value": "2.0996",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/swats"
    },
    {
      "rank": 26,
      "optimizer": "fira",
      "value": "2.1055",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fira"
    },
    {
      "rank": 27,
      "optimizer": "apollo",
      "value": "2.1055",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/apollo"
    },
    {
      "rank": 28,
      "optimizer": "galore",
      "value": "2.1055",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/galore"
    },
    {
      "rank": 29,
      "optimizer": "adam",
      "value": "2.1534",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adam"
    },
    {
      "rank": 30,
      "optimizer": "ademamix",
      "value": "2.1666",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ademamix"
    },
    {
      "rank": 31,
      "optimizer": "emolynx",
      "value": "2.1835",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emolynx"
    },
    {
      "rank": 32,
      "optimizer": "lion",
      "value": "2.1835",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lion"
    },
    {
      "rank": 33,
      "optimizer": "simplifiedademamix",
      "value": "2.1922",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/simplifiedademamix"
    },
    {
      "rank": 34,
      "optimizer": "laprop",
      "value": "2.2116",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/laprop"
    },
    {
      "rank": 35,
      "optimizer": "tam",
      "value": "2.292",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/tam"
    },
    {
      "rank": 36,
      "optimizer": "adatam",
      "value": "2.3018",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adatam"
    },
    {
      "rank": 37,
      "optimizer": "adamax",
      "value": "2.3274",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamax"
    },
    {
      "rank": 38,
      "optimizer": "ranger21",
      "value": "2.3908",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger21"
    },
    {
      "rank": 39,
      "optimizer": "novograd",
      "value": "2.3957",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/novograd"
    },
    {
      "rank": 40,
      "optimizer": "came",
      "value": "2.4156",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/came"
    },
    {
      "rank": 41,
      "optimizer": "nadam",
      "value": "2.4236",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/nadam"
    },
    {
      "rank": 42,
      "optimizer": "adan",
      "value": "2.4638",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adan"
    },
    {
      "rank": 43,
      "optimizer": "schedulefreeadamw",
      "value": "2.5309",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreeadamw"
    },
    {
      "rank": 44,
      "optimizer": "fromage",
      "value": "2.5787",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/fromage"
    },
    {
      "rank": 45,
      "optimizer": "sgd",
      "value": "2.6349",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgd"
    },
    {
      "rank": 46,
      "optimizer": "sgdp",
      "value": "2.6349",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgdp"
    },
    {
      "rank": 47,
      "optimizer": "adadelta",
      "value": "2.6415",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adadelta"
    },
    {
      "rank": 48,
      "optimizer": "scionlight",
      "value": "2.7025",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scionlight"
    },
    {
      "rank": 49,
      "optimizer": "pid",
      "value": "2.7063",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/pid"
    },
    {
      "rank": 50,
      "optimizer": "adasmooth",
      "value": "2.791",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adasmooth"
    },
    {
      "rank": 51,
      "optimizer": "emoneco",
      "value": "2.8004",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/emoneco"
    },
    {
      "rank": 52,
      "optimizer": "vsgd",
      "value": "2.8283",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/vsgd"
    },
    {
      "rank": 53,
      "optimizer": "lars",
      "value": "2.8363",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lars"
    },
    {
      "rank": 54,
      "optimizer": "scion",
      "value": "2.8934",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scion"
    },
    {
      "rank": 55,
      "optimizer": "ftrl",
      "value": "2.9649",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ftrl"
    },
    {
      "rank": 56,
      "optimizer": "sm3",
      "value": "2.9704",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sm3"
    },
    {
      "rank": 57,
      "optimizer": "adabound",
      "value": "2.9806",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adabound"
    },
    {
      "rank": 58,
      "optimizer": "lamb",
      "value": "3.0246",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lamb"
    },
    {
      "rank": 59,
      "optimizer": "asgd",
      "value": "3.0381",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/asgd"
    },
    {
      "rank": 60,
      "optimizer": "adapnm",
      "value": "3.0486",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adapnm"
    },
    {
      "rank": 61,
      "optimizer": "padam",
      "value": "3.0507",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/padam"
    },
    {
      "rank": 62,
      "optimizer": "exadam",
      "value": "3.0856",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/exadam"
    },
    {
      "rank": 63,
      "optimizer": "avagrad",
      "value": "3.1602",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/avagrad"
    },
    {
      "rank": 64,
      "optimizer": "madgrad",
      "value": "3.1647",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/madgrad"
    },
    {
      "rank": 65,
      "optimizer": "apollodqn",
      "value": "3.1834",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/apollodqn"
    },
    {
      "rank": 66,
      "optimizer": "radam",
      "value": "3.1856",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/radam"
    },
    {
      "rank": 67,
      "optimizer": "prodigy",
      "value": "3.1962",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/prodigy"
    },
    {
      "rank": 68,
      "optimizer": "nero",
      "value": "3.2117",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/nero"
    },
    {
      "rank": 69,
      "optimizer": "diffgrad",
      "value": "3.2663",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/diffgrad"
    },
    {
      "rank": 70,
      "optimizer": "scalableshampoo",
      "value": "3.2861",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/scalableshampoo"
    },
    {
      "rank": 71,
      "optimizer": "rmsprop",
      "value": "3.2876",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/rmsprop"
    },
    {
      "rank": 72,
      "optimizer": "adai",
      "value": "3.3183",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adai"
    },
    {
      "rank": 73,
      "optimizer": "qhm",
      "value": "3.4021",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/qhm"
    },
    {
      "rank": 74,
      "optimizer": "pnm",
      "value": "3.4458",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/pnm"
    },
    {
      "rank": 75,
      "optimizer": "aggmo",
      "value": "3.5831",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/aggmo"
    },
    {
      "rank": 76,
      "optimizer": "lbfgs",
      "value": "3.6091",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/lbfgs"
    },
    {
      "rank": 77,
      "optimizer": "adahessian",
      "value": "3.6174",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adahessian"
    },
    {
      "rank": 78,
      "optimizer": "dadaptadagrad",
      "value": "3.955",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptadagrad"
    },
    {
      "rank": 79,
      "optimizer": "ranger",
      "value": "4.0586",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger"
    },
    {
      "rank": 80,
      "optimizer": "grams",
      "value": "4.0616",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/grams"
    },
    {
      "rank": 81,
      "optimizer": "schedulefreesgd",
      "value": "4.0727",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreesgd"
    },
    {
      "rank": 82,
      "optimizer": "gravity",
      "value": "4.1231",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/gravity"
    },
    {
      "rank": 83,
      "optimizer": "kate",
      "value": "4.2841",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/kate"
    },
    {
      "rank": 84,
      "optimizer": "dadaptlion",
      "value": "4.3568",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptlion"
    },
    {
      "rank": 85,
      "optimizer": "accsgd",
      "value": "4.6253",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/accsgd"
    },
    {
      "rank": 86,
      "optimizer": "adams",
      "value": "4.734",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adams"
    },
    {
      "rank": 87,
      "optimizer": "dadaptsgd",
      "value": "4.9685",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptsgd"
    },
    {
      "rank": 88,
      "optimizer": "racs",
      "value": "4.9971",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/racs"
    },
    {
      "rank": 89,
      "optimizer": "dadaptadan",
      "value": "5.3934",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/dadaptadan"
    },
    {
      "rank": 90,
      "optimizer": "adamg",
      "value": "7.1805",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamg"
    },
    {
      "rank": 91,
      "optimizer": "schedulefreeradam",
      "value": "7.198",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/schedulefreeradam"
    },
    {
      "rank": 92,
      "optimizer": "adamod",
      "value": "7.3333",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adamod"
    },
    {
      "rank": 93,
      "optimizer": "srmm",
      "value": "7.6447",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/srmm"
    },
    {
      "rank": 94,
      "optimizer": "adafactor",
      "value": "10.296",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/adafactor"
    },
    {
      "rank": 95,
      "optimizer": "mars",
      "value": "11.9431",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/mars"
    },
    {
      "rank": 96,
      "optimizer": "sgdsai",
      "value": "13.6452",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/sgdsai"
    },
    {
      "rank": 97,
      "optimizer": "shampoo",
      "value": "29.0068",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/shampoo"
    },
    {
      "rank": 98,
      "optimizer": "qhadam",
      "value": "Failed \u26a0\ufe0f",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/qhadam"
    },
    {
      "rank": 99,
      "optimizer": "ranger25",
      "value": "Failed \u26a0\ufe0f",
      "vis": "https://aidinhamedi.github.io/Optimizer-Benchmark/vis/ranger25"
    }
  ]
}
